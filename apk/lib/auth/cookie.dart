// lib/auth/cookie_consent.dart
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

/// Classe utilit√°ria para gerenciar consentimento de cookies
class CookieConsent {
  /// Checa se j√° existe consentimento e, caso n√£o, mostra o banner
  static Future<void> checkAndShow(BuildContext context) async {
    final prefs = await SharedPreferences.getInstance();
    final consentGiven = prefs.getBool('cookie_consent_given') ?? false;

    if (!consentGiven && context.mounted) {
      _showCookieConsentBanner(context);
    }
  }

  /// Exibe o banner fixo de consentimento
  static void _showCookieConsentBanner(BuildContext context) {
    showModalBottomSheet(
      context: context,
      isDismissible: false,
      enableDrag: false,
      backgroundColor: Colors.white,
      shape: const RoundedRectangleBorder(
        borderRadius: BorderRadius.vertical(top: Radius.circular(16.0)),
      ),
      builder: (context) => Container(
        padding: const EdgeInsets.fromLTRB(24.0, 24.0, 24.0, 16.0),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              'üç™ Sua Privacidade',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 16.0),

            // Texto com link para a p√°gina de pol√≠tica
            RichText(
              text: TextSpan(
                style: const TextStyle(fontSize: 15, color: Colors.black54, height: 1.5),
                children: [
                  const TextSpan(
                    text: 'Usamos cookies e tecnologias essenciais para o funcionamento do app. Para saber mais, leia nossa ',
                  ),
                  TextSpan(
                    text: 'Pol√≠tica de Cookies',
                    style: const TextStyle(
                      color: Colors.teal,
                      fontWeight: FontWeight.bold,
                      decoration: TextDecoration.underline,
                    ),
                    recognizer: TapGestureRecognizer()
                      ..onTap = () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(builder: (_) => const CookiePolicyPage()),
                        );
                      },
                  ),
                  const TextSpan(text: '.'),
                ],
              ),
            ),

            const SizedBox(height: 24.0),

            // Bot√µes
            Row(
              mainAxisAlignment: MainAxisAlignment.end,
              children: [
                TextButton(
                  onPressed: () => _handleConsent(context, accepted: false),
                  child: const Text('REJEITAR'),
                ),
                const SizedBox(width: 8.0),
                ElevatedButton(
                  onPressed: () => _handleConsent(context, accepted: true),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.teal,
                    foregroundColor: Colors.white,
                  ),
                  child: const Text('ACEITAR'),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }

  /// Salva a escolha do usu√°rio no SharedPreferences
  static Future<void> _handleConsent(BuildContext context, {required bool accepted}) async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setBool('cookie_consent_given', true);
    debugPrint('Consent given. Accepted: $accepted');

    if (context.mounted) {
      Navigator.of(context).pop();
    }
  }
}

/// =======================
/// P√°gina de Pol√≠tica de Cookies
/// =======================
class CookiePolicyPage extends StatelessWidget {
  const CookiePolicyPage({super.key});

  @override
  Widget build(BuildContext context) {
    Widget buildTextBlock(String title, String content) {
      return Padding(
        padding: const EdgeInsets.only(bottom: 24.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(title,
                style: Theme.of(context)
                    .textTheme
                    .titleLarge
                    ?.copyWith(fontWeight: FontWeight.bold)),
            const SizedBox(height: 8),
            Text(content,
                style: Theme.of(context).textTheme.bodyMedium?.copyWith(height: 1.5)),
          ],
        ),
      );
    }

    return Scaffold(
      appBar: AppBar(
        title: const Text('Pol√≠tica de Cookies'),
        backgroundColor: Colors.white,
        elevation: 1,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(24.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            buildTextBlock(
              '1. O que s√£o Cookies?',
              'Cookies s√£o pequenos arquivos de texto armazenados no dispositivo. Em aplicativos, usamos tecnologias semelhantes para melhorar a experi√™ncia.',
            ),
            buildTextBlock(
              '2. Tipos de Cookies Utilizados',
              '‚Ä¢ Necess√°rios: fundamentais para o funcionamento do app.\n\n'
                  '‚Ä¢ An√°lise: ajudam a entender como o app √© usado.\n\n'
                  '‚Ä¢ Marketing: personalizam sua experi√™ncia com base no uso.',
            ),
            buildTextBlock(
              '3. Cookies de Terceiros',
              'Podemos utilizar servi√ßos externos que inserem cookies pr√≥prios. N√£o temos controle sobre eles.',
            ),
            buildTextBlock(
              '4. Como Recusar',
              'Voc√™ pode desativar cookies nas configura√ß√µes do dispositivo. Algumas fun√ß√µes podem n√£o funcionar corretamente.',
            ),
          ],
        ),
      ),
    );
  }
}
